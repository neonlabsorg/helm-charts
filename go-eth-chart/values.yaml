global:
  namespace: "geth-test"
  labels: {}
  ethParameters:
    # existingSecret: geth-secret # If you want to create a secret outside of this chart, you need to set up all fields in the current block. If this exists, other parameters will be ignored.
    NETWORK_ID: "22222" # Some network_ID MUST align this value with /files/genesis.json "chainId": , Current value is 22222
    JWTSECRET: "0xfad2709d0bb03bf0e8ba3c99bea194575d3e98863133d1af638ed056d1d59345"
    ACCOUNT_ADDRESS: "0x123463a4b065722e99115d6c222f267d9cabb524" 
    ACCOUNT_PASSWORD: ""
     

geth:
  image:
    repository: ethereum/client-go
    tag: v1.14.8
    pullPolicy: IfNotPresent
  replicaCount: 1
  persistentVolumeClaim:
    accessModes: ReadWriteOnce
    storageClass: "hcloud-volumes"
    size: "10Gi"
  resources:
    limits:
      cpu: "750m"
      memory: "1Gi"
    requests:
      cpu: "250m"
      memory: "256Mi"
  nodeSelector: {}
  tolerations: []
  affinity: []

beacon_node:
  image:
    repository: gcr.io/prysmaticlabs/prysm/beacon-chain
    tag: stable
  prysmctl:
    image:
      repository: gcr.io/prysmaticlabs/prysm/cmd/prysmctl
      tag: v5.1.0
  replicaCount: 1
  persistentVolumeClaim:
    accessModes: ReadWriteOnce
    storageClass: "hcloud-volumes"
    size: "10Gi"
  resources:
    limits:
      cpu: "2"
      memory: "1Gi"
    requests:
      cpu: "250m"
      memory: "256Mi"
  nodeSelector: {}
  tolerations: []
  affinity: []


validator:
  image:
    repository: gcr.io/prysmaticlabs/prysm/validator
    tag: v5.1.0
  replicaCount: 1
  persistentVolumeClaim:
    accessModes: ReadWriteOnce
    storageClass: "hcloud-volumes"
    size: "10Gi"
  resources:
    limits:
      cpu: "2"
      memory: "1Gi"
    requests:
      cpu: "250m"
      memory: "256Mi"
  nodeSelector: {}
  tolerations: []
  affinity: []

ingress:
  enabled: true
  ingressClassName: nginx
  annotations: 
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
    cert-manager.io/cluster-issuer: letsencrypt # This one will overwrite default values in case of conflict
  annotations_default:
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "14400"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Authorization $http_authorization;
      proxy_pass_header Authorization;
  tls: example.com
  host: example.com
  # path:
  